<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="0" failed="2" total="10" passed="8">
  <reporter-output>
  </reporter-output>
  <suite name="Suite" duration-ms="5120" started-at="2018-08-06T02:57:57Z" finished-at="2018-08-06T02:58:02Z">
    <groups>
    </groups>
    <test name="mytest" duration-ms="83" started-at="2018-08-06T02:57:57Z" finished-at="2018-08-06T02:57:57Z">
      <class name="test.testng.parralel.MethodP">
        <test-method status="PASS" signature="a()[pri:0, instance:test.testng.parralel.MethodP@2f8dad04]" name="a" duration-ms="17" started-at="2018-08-06T10:57:57Z" finished-at="2018-08-06T10:57:57Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- a -->
        <test-method status="PASS" signature="f(java.lang.Integer, java.lang.String)[pri:0, instance:test.testng.parralel.MethodP@2f8dad04]" name="f" duration-ms="2" started-at="2018-08-06T10:57:57Z" data-provider="dp" finished-at="2018-08-06T10:57:57Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[a]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- f -->
        <test-method status="PASS" signature="f(java.lang.Integer, java.lang.String)[pri:0, instance:test.testng.parralel.MethodP@2f8dad04]" name="f" duration-ms="3" started-at="2018-08-06T10:57:57Z" data-provider="dp" finished-at="2018-08-06T10:57:57Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[b]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- f -->
      </class> <!-- test.testng.parralel.MethodP -->
      <class name="test.testng.parralel.NewTest">
        <test-method status="PASS" signature="f()[pri:0, instance:test.testng.parralel.NewTest@29e495ff]" name="f" duration-ms="2" started-at="2018-08-06T10:57:57Z" finished-at="2018-08-06T10:57:57Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- f -->
      </class> <!-- test.testng.parralel.NewTest -->
    </test> <!-- mytest -->
    <test name="mytest2" duration-ms="118" started-at="2018-08-06T02:57:57Z" finished-at="2018-08-06T02:57:57Z">
      <class name="test.testng.parralel.MethodP">
        <test-method status="PASS" signature="a()[pri:0, instance:test.testng.parralel.MethodP@732c2a62]" name="a" duration-ms="17" started-at="2018-08-06T10:57:57Z" finished-at="2018-08-06T10:57:57Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- a -->
        <test-method status="PASS" signature="f(java.lang.Integer, java.lang.String)[pri:0, instance:test.testng.parralel.MethodP@732c2a62]" name="f" duration-ms="18" started-at="2018-08-06T10:57:57Z" data-provider="dp" finished-at="2018-08-06T10:57:57Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[a]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- f -->
        <test-method status="PASS" signature="f(java.lang.Integer, java.lang.String)[pri:0, instance:test.testng.parralel.MethodP@732c2a62]" name="f" duration-ms="3" started-at="2018-08-06T10:57:57Z" data-provider="dp" finished-at="2018-08-06T10:57:57Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[b]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- f -->
      </class> <!-- test.testng.parralel.MethodP -->
      <class name="test.testng.parralel.NewTest">
        <test-method status="PASS" signature="f()[pri:0, instance:test.testng.parralel.NewTest@272ed83b]" name="f" duration-ms="2" started-at="2018-08-06T10:57:57Z" finished-at="2018-08-06T10:57:57Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- f -->
      </class> <!-- test.testng.parralel.NewTest -->
    </test> <!-- mytest2 -->
    <test name="vivo_x9_Test" duration-ms="5116" started-at="2018-08-06T02:57:57Z" finished-at="2018-08-06T02:58:02Z">
      <class name="gby.testng.testcase.OpenHousePageCase">
        <test-method status="FAIL" signature="f()[pri:0, instance:gby.testng.testcase.OpenHousePageCase@61386958]" name="f" duration-ms="3006" started-at="2018-08-06T10:57:59Z" finished-at="2018-08-06T10:58:02Z">
          <exception class="java.lang.NullPointerException">
            <full-stacktrace>
              <![CDATA[java.lang.NullPointerException
	at gby.testng.testcase.OpenHousePageCase.f(OpenHousePageCase.java:30)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:643)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:820)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:782)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.access$000(SuiteRunner.java:39)
	at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:400)
	at org.testng.internal.thread.ThreadUtil$2.call(ThreadUtil.java:64)
	at java.util.concurrent.FutureTask.run(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at java.lang.Thread.run(Unknown Source)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.NullPointerException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- f -->
      </class> <!-- gby.testng.testcase.OpenHousePageCase -->
      <class name="gby.testng.testcase.InitDriverCase">
        <test-method status="FAIL" signature="f(java.lang.String, java.lang.String)[pri:0, instance:gby.testng.testcase.InitDriverCase@77eca502]" name="f" duration-ms="2076" started-at="2018-08-06T10:57:57Z" finished-at="2018-08-06T10:57:59Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[192.168.20.24:5555]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[127.0.0.1:4710]]>
              </value>
            </param>
          </params>
          <exception class="org.openqa.selenium.WebDriverException">
            <message>
              <![CDATA[Connection refused: connect
Build info: version: '3.12.0', revision: '7c6e0b3', time: '2018-05-08T14:04:26.12Z'
System info: host: '桂宝元', ip: '192.168.10.91', os.name: 'Windows 7', os.arch: 'amd64', os.version: '6.1', java.version: '1.8.0_171'
Driver info: driver.version: AndroidDriver]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.WebDriverException: Connection refused: connect
Build info: version: '3.12.0', revision: '7c6e0b3', time: '2018-05-08T14:04:26.12Z'
System info: host: '桂宝元', ip: '192.168.10.91', os.name: 'Windows 7', os.arch: 'amd64', os.version: '6.1', java.version: '1.8.0_171'
Driver info: driver.version: AndroidDriver
	at io.appium.java_client.remote.AppiumCommandExecutor.lambda$2(AppiumCommandExecutor.java:243)
	at java.util.Optional.orElseGet(Unknown Source)
	at io.appium.java_client.remote.AppiumCommandExecutor.execute(AppiumCommandExecutor.java:242)
	at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:543)
	at io.appium.java_client.DefaultGenericMobileDriver.execute(DefaultGenericMobileDriver.java:42)
	at io.appium.java_client.AppiumDriver.execute(AppiumDriver.java:1)
	at io.appium.java_client.android.AndroidDriver.execute(AndroidDriver.java:1)
	at org.openqa.selenium.remote.RemoteWebDriver.startSession(RemoteWebDriver.java:207)
	at org.openqa.selenium.remote.RemoteWebDriver.<init>(RemoteWebDriver.java:130)
	at io.appium.java_client.DefaultGenericMobileDriver.<init>(DefaultGenericMobileDriver.java:38)
	at io.appium.java_client.AppiumDriver.<init>(AppiumDriver.java:84)
	at io.appium.java_client.AppiumDriver.<init>(AppiumDriver.java:94)
	at io.appium.java_client.android.AndroidDriver.<init>(AndroidDriver.java:93)
	at gby.appium.ui.InitAppStart.initDriver(InitAppStart.java:39)
	at gby.testng.testcase.InitDriverCase.f(InitDriverCase.java:31)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:643)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:820)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:782)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.access$000(SuiteRunner.java:39)
	at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:400)
	at org.testng.internal.thread.ThreadUtil$2.call(ThreadUtil.java:64)
	at java.util.concurrent.FutureTask.run(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at java.lang.Thread.run(Unknown Source)
Caused by: java.net.ConnectException: Connection refused: connect
	at java.net.DualStackPlainSocketImpl.waitForConnect(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(Unknown Source)
	at java.net.AbstractPlainSocketImpl.doConnect(Unknown Source)
	at java.net.AbstractPlainSocketImpl.connectToAddress(Unknown Source)
	at java.net.AbstractPlainSocketImpl.connect(Unknown Source)
	at java.net.PlainSocketImpl.connect(Unknown Source)
	at java.net.SocksSocketImpl.connect(Unknown Source)
	at java.net.Socket.connect(Unknown Source)
	at okhttp3.internal.platform.Platform.connectSocket(Platform.java:125)
	at okhttp3.internal.connection.RealConnection.connectSocket(RealConnection.java:238)
	at okhttp3.internal.connection.RealConnection.connect(RealConnection.java:158)
	at okhttp3.internal.connection.StreamAllocation.findConnection(StreamAllocation.java:256)
	at okhttp3.internal.connection.StreamAllocation.findHealthyConnection(StreamAllocation.java:134)
	at okhttp3.internal.connection.StreamAllocation.newStream(StreamAllocation.java:113)
	at okhttp3.internal.connection.ConnectInterceptor.intercept(ConnectInterceptor.java:42)
	at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:147)
	at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:121)
	at okhttp3.internal.cache.CacheInterceptor.intercept(CacheInterceptor.java:93)
	at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:147)
	at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:121)
	at okhttp3.internal.http.BridgeInterceptor.intercept(BridgeInterceptor.java:93)
	at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:147)
	at okhttp3.internal.http.RetryAndFollowUpInterceptor.intercept(RetryAndFollowUpInterceptor.java:125)
	at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:147)
	at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:121)
	at okhttp3.RealCall.getResponseWithInterceptorChain(RealCall.java:200)
	at okhttp3.RealCall.execute(RealCall.java:77)
	at org.openqa.selenium.remote.internal.OkHttpClient.execute(OkHttpClient.java:105)
	at org.openqa.selenium.remote.ProtocolHandshake.createSession(ProtocolHandshake.java:101)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at io.appium.java_client.remote.AppiumCommandExecutor$1.createSession(AppiumCommandExecutor.java:185)
	at io.appium.java_client.remote.AppiumCommandExecutor.createSession(AppiumCommandExecutor.java:209)
	at io.appium.java_client.remote.AppiumCommandExecutor.execute(AppiumCommandExecutor.java:231)
	... 32 more
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.WebDriverException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- f -->
      </class> <!-- gby.testng.testcase.InitDriverCase -->
    </test> <!-- vivo_x9_Test -->
  </suite> <!-- Suite -->
</testng-results>
